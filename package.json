{
  "name": "tilog-server-node-v2",
  "version": "0.0.1",
  "description": "blog platform for developers",
  "homepage": "https://github.com/TIL-Log-lab",
  "repository": {
    "type": "github",
    "url": "https://github.com/TIL-Log-lab/Tilog-server-node-v2"
  },
  "author": {
    "name": "argon1025",
    "email": "argon1025@gmail.com",
    "url": "https://github.com/argon1025"
  },
  "contributors": [
    {
      "name": "Daphne-dev",
      "email": "daphne01215@gmail.com",
      "url": "https://github.com/TIL-Log-lab"
    }
  ],
  "bugs": "argon1025@gmail.com",
  "private": true,
  "license": "UNLICENSED",
  "engines": {
    "node": "^16.14.2",
    "yarn": "^1.22.0"
  },
  "scripts": {
    "prebuild": "rimraf dist",
    "build": "nest build",
    "format": "prettier --write \"src/**/*.ts\" \"test/**/*.ts\"",
    "start:local": "NODE_ENV=local nest start",
    "start:local:watch": "NODE_ENV=local nest start --watch",
    "start:local:debug": "NODE_ENV=local nest start --debug --watch",
    "start:prod": "NODE_ENV=prod node dist/main",
    "lint": "eslint \"{src,apps,libs,test}/**/*.ts\" --fix",
    "test": "jest",
    "test:watch": "jest --watch",
    "test:cov": "jest --coverage",
    "test:debug": "node --inspect-brk -r tsconfig-paths/register -r ts-node/register node_modules/.bin/jest --runInBand",
    "test:e2e": "jest --config ./test/jest-e2e.json",
    "prisma:generate": "prisma generate",
    "prisma:pull:local": "dotenv -e environments/.local.env prisma db pull",
    "prisma:push:local": "dotenv -e environments/.local.env prisma db push",
    "prisma:migrate:local": "dotenv -e environments/.local.env prisma migrate dev",
    "prisma:migrate:create_only:local": "dotenv -e environments/.local.env -- npx prisma migrate dev --create-only",
    "openapi:generate": "openapi-generator-cli generate -i library/swagger/openapi-spec.json -g typescript-axios -o openapi/tilog-api --additional-properties=supportsES6=true",
    "openapi:publish": "yarn openapi:generate &&cd ./openapi && yarn build && yarn package:publish"
  },
  "dependencies": {
    "@nestjs/common": "^9.0.1",
    "@nestjs/config": "^2.2.0",
    "@nestjs/core": "^9.0.1",
    "@nestjs/jwt": "^9.0.0",
    "@nestjs/passport": "^9.0.0",
    "@nestjs/platform-express": "^9.0.1",
    "@nestjs/swagger": "^6.0.1",
    "@prisma/client": "^4.0.0",
    "aws-sdk": "^2.1172.0",
    "class-transformer": "^0.5.1",
    "class-validator": "^0.13.2",
    "cookie-parser": "^1.4.6",
    "date-fns": "^2.28.0",
    "express": "^4.18.1",
    "joi": "^17.6.0",
    "lodash": "^4.17.21",
    "passport": "^0.6.0",
    "passport-github2": "^0.1.12",
    "passport-jwt": "^4.0.0",
    "reflect-metadata": "^0.1.13",
    "rimraf": "^3.0.2",
    "rxjs": "^7.2.0",
    "swagger-ui-express": "^4.4.0"
  },
  "devDependencies": {
    "@nestjs/cli": "^9.0.0",
    "@nestjs/schematics": "^9.0.1",
    "@nestjs/testing": "^9.0.1",
    "@openapitools/openapi-generator-cli": "^2.5.1",
    "@types/cookie-parser": "^1.4.3",
    "@types/express": "^4.17.13",
    "@types/jest": "28.1.4",
    "@types/lodash": "^4.14.182",
    "@types/multer": "^1.4.7",
    "@types/node": "^18.0.3",
    "@types/passport-github2": "^1.2.5",
    "@types/passport-jwt": "^3.0.6",
    "@types/supertest": "^2.0.11",
    "@typescript-eslint/eslint-plugin": "^5.30.5",
    "@typescript-eslint/parser": "^5.30.5",
    "dotenv-cli": "^6.0.0",
    "eslint": "^8.19.0",
    "eslint-config-airbnb-base": "^15.0.0",
    "eslint-config-airbnb-typescript": "^17.0.0",
    "eslint-config-prettier": "^8.3.0",
    "eslint-plugin-import": "^2.26.0",
    "eslint-plugin-prettier": "^4.2.1",
    "jest": "^28.1.2",
    "prettier": "^2.7.1",
    "prisma": "^4.0.0",
    "source-map-support": "^0.5.20",
    "supertest": "^6.2.4",
    "ts-jest": "^28.0.5",
    "ts-loader": "^9.3.1",
    "ts-node": "^10.8.2",
    "tsconfig-paths": "^4.0.0",
    "typescript": "^4.7.4"
  },
  "jest": {
    "moduleFileExtensions": [
      "js",
      "json",
      "ts"
    ],
    "rootDir": ".",
    "testRegex": ".*\\.spec\\.ts$",
    "transform": {
      "^.+\\.(t|j)s$": "ts-jest"
    },
    "collectCoverageFrom": [
      "**/*.(t|j)s"
    ],
    "coverageDirectory": "../coverage",
    "testEnvironment": "node"
  }
}
